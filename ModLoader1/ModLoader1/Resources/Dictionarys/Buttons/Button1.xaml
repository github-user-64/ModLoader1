
    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--矩形圆角按钮-->
    <!--鼠标悬停:变色(Background到Foreground)-->
    <!--鼠标按下:缩小-->

    <Style x:Key="Button1"  TargetType="{x:Type Button}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource Res1.Colors1.Styles1.Style1.Button1.Back1}"/>
        <Setter Property="Foreground" Value="{DynamicResource Res1.Colors1.Styles1.Style1.Button1.Fore1}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="4" BorderThickness="1" BorderBrush="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="true">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="border_ScaleTransform"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Grid>
                            <Rectangle x:Name="rectangle1" Fill="{TemplateBinding Background}" Opacity="0"/>
                            <ContentPresenter x:Name="contentPresenter" TextElement.Foreground="{TemplateBinding Background}" Margin="{TemplateBinding Padding}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="rectangle1" Storyboard.TargetProperty="Opacity"
                                             To="0.1" Duration="0:0:0.2" DecelerationRatio="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="rectangle1" Storyboard.TargetProperty="Opacity"
                                             To="0" Duration="0:0:0.2" DecelerationRatio="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                            <Setter Property="Fill" TargetName="rectangle1" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsPressed}" Value="true"/>
                                <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsMouseOver}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleX"
                                             To="0.95" Duration="0:0:0.1" DecelerationRatio="1"/>
                                        <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleY"
                                             To="0.95" Duration="0:0:0.1" DecelerationRatio="1"/>
                                        <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleX"
                                             To="0.94" Duration="0:0:0.2" DecelerationRatio="1" BeginTime="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleY"
                                             To="0.94" Duration="0:0:0.2" DecelerationRatio="1" BeginTime="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleX"
                                             From="0.95" To="1" Duration="0:0:0.2" DecelerationRatio="1"/>
                                        <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleY"
                                             From="0.95" To="1" Duration="0:0:0.2" DecelerationRatio="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style TargetType="Button" BasedOn="{StaticResource Button1}"/-->

</ResourceDictionary>
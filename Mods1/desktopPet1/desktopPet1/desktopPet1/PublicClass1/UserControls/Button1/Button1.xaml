<Button x:Class="desktopPet1.PublicClass1.UserControls.Button1"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             Height="50" Width="50" IsTabStop="False" FocusVisualStyle="{x:Null}"  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <Button.Template>
        <ControlTemplate TargetType="{x:Type Button}">
            <Grid RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="border_ScaleTransform"/>
                    </TransformGroup>
                </Grid.RenderTransform>


                <Border CornerRadius="8" DataContext="{TemplateBinding DataContext}">
                    <Border.Background>
                        <Binding Path="Background">
                            <Binding.TargetNullValue>
                                <ImageBrush Stretch="Fill">
                                    <ImageBrush.ImageSource>
                                        <ImageSource>/desktopPet1;component/Resources/Images/ValueIsNull/a1.png</ImageSource>
                                    </ImageBrush.ImageSource>
                                </ImageBrush>
                            </Binding.TargetNullValue>
                        </Binding>
                    </Border.Background>
                </Border>

                <Grid Name="grid1" Margin="6" Visibility="Collapsed">
                    <Border Name="border1" Margin="-6" CornerRadius="8" Background="DimGray" Opacity="0.4"/>
                    <Border Width="5" Background="White"/>
                    <Border Height="5" Background="White"/>
                </Grid>

                <FrameworkElement x:Name="Popup_fe1" Margin="0,0,0,-22" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                <Popup IsOpen="{Binding Path=IsMouseOver, Mode=OneWay}" PlacementTarget="{Binding ElementName=Popup_fe1}"
                       AllowsTransparency="True" Placement="Center">
                    <ContentControl Tag="{Binding Path=ep_Title}">
                        <Border Padding="5" CornerRadius="2" Background="White" BorderBrush="Gray" BorderThickness="1">
                            <TextBlock Foreground="DimGray" Text="{Binding Path=ep_Title}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ContentControl.Template>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <ContentPresenter/>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="Tag" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ContentControl.Template>
                    </ContentControl>
                </Popup>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grid1" Property="Visibility" Value="Visible"/>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsPressed}" Value="true"/>
                        <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsMouseOver}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleX"
                                             To="0.95" Duration="0:0:0.1" DecelerationRatio="1"/>
                                <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleY"
                                             To="0.95" Duration="0:0:0.1" DecelerationRatio="1"/>
                                <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleX"
                                             To="0.94" Duration="0:0:0.2" DecelerationRatio="1" BeginTime="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleY"
                                             To="0.94" Duration="0:0:0.2" DecelerationRatio="1" BeginTime="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleX"
                                             From="0.95" To="1" Duration="0:0:0.2" DecelerationRatio="1"/>
                                <DoubleAnimation Storyboard.TargetName="border_ScaleTransform" Storyboard.TargetProperty="ScaleY"
                                             From="0.95" To="1" Duration="0:0:0.2" DecelerationRatio="1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>

</Button>